@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;
  --green-text: #00BF63;
  --purple-text: #4040FF;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #000000;
    --foreground: #ededed;
  }
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: Arial, Helvetica, sans-serif;
}

.green-text {
  color: var(--green-text);
}

.gradient-text {
  background: linear-gradient(40deg,
    #FFFFFF 0%,
    #FFD66D 33%,
    #FFFFFF 50%,
    #FFD66D 67%,
    #FFFFFF 100%
  );
  background-size: 200% 100%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: moveGradient 5s alternate infinite;
}

.gradient-bg {
  background: linear-gradient(40deg,
    #FFFFFF 0%,
    #FFD66D 20%,
    #FFFFFF 40%,
    #FFD66D 60%,
    #FFFFFF 80%,
    #FFD66D 100%
  );
  /* Use 300% to ensure we always have enough gradient to show */
  background-size: 300% 100%;
  animation: moveGradient 5s alternate infinite;
}

@keyframes moveGradient {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 100% 50%;
  }
}

@keyframes float {
  0% {
    transform: translate(0, 0) scale(1);
  }
  33% {
    transform: translate(var(--translate-x1), var(--translate-y1)) scale(1.1);
  }
  66% {
    transform: translate(var(--translate-x2), var(--translate-y2)) scale(0.9);
  }
  100% {
    transform: translate(0, 0) scale(1);
  }
}

@keyframes shimmer {
  0% {
    background-position: 100% 0;
  }
  100% {
    background-position: -100% 0;
  }
}

@keyframes fadeIn {
  from {
      opacity: 0;
  }
  to {
      opacity: 1;
  }
}

@keyframes slideInWithBounce {
  0% {
      transform: translateX(-100%);
      opacity: 0;
  }
  70% {
      transform: translateX(20px); /* Overshoots by 20px */
      opacity: 1;
  }
  100% {
      transform: translateX(0);
      opacity: 1;
  }
}

.slideIn {
  opacity: 0; /* Initial state */
  transform: translateX(-200vw); /* Initial position */
  animation: slideIn 1.2s cubic-bezier(0.25, 0.46, 0.45, 0.94) 1s forwards; /* 'forwards' keeps final state */
}

@keyframes slideIn {
  0% {
      transform: translateX(-200vw);
      opacity: 0;
  }
  70% {
      transform: translateX(20px);
      opacity: 1;
  }
  100% {
      transform: translateX(0);
      opacity: 1;
  }
}

.animate-fade-in {
  animation: fadeIn 1s ease-in;
}

.animate-float {
  animation: float ease-in-out infinite;
}

.aura-background {
  min-height: 100vh;
  background-color: #000000;
  background-image: 
    radial-gradient(
      circle at 50% 50%,
      rgba(0, 255, 128, 0.15) 0%,
      rgba(0, 80, 40, 0.15) 25%,
      rgba(0, 40, 20, 0.1) 50%,
      transparent 100%
    ),
    radial-gradient(
      circle at 80% 20%,
      rgba(0, 255, 128, 0.1) 0%,
      rgba(0, 80, 40, 0.1) 30%,
      transparent 70%
    ),
    radial-gradient(
      circle at 20% 80%,
      rgba(0, 255, 128, 0.1) 0%,
      rgba(0, 80, 40, 0.1) 30%,
      transparent 70%
    );
  position: relative;
  overflow: hidden;
}

/* Optional: Add a subtle noise texture */
.aura-background::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 400 400' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%' height='100%' filter='url(%23noiseFilter)' opacity='0.05'/%3E%3C/svg%3E");
  opacity: 0.4;
  pointer-events: none;
}

/* TipTap Editor Styles */
.ProseMirror {
  @apply text-white;
  position: relative;
}

.ProseMirror h1 {
  @apply text-4xl font-bold mb-4 mt-2;
}

.ProseMirror h2 {
  @apply text-3xl font-bold mb-3 mt-2;
}

.ProseMirror h3 {
  @apply text-2xl font-bold mb-2 mt-2;
}

.ProseMirror p {
  @apply mb-2;
}

.ProseMirror ul {
  @apply list-disc ml-4 mb-2;
}

.ProseMirror ol {
  @apply list-decimal ml-4 mb-2;
}

.ProseMirror blockquote {
  @apply border-l-4 border-gray-500 pl-4 italic my-2;
}

.ProseMirror pre {
  @apply bg-gray-800 rounded p-2 my-2 font-mono;
}

.ProseMirror a {
  @apply text-blue-400 hover:text-blue-300 underline;
}

.ProseMirror img {
  @apply max-w-full h-auto rounded;
  position: relative;
  cursor: default;
  display: inline-block;
  max-width: 100%;
  height: auto;
}

.ProseMirror img.ProseMirror-selectednode {
  outline: 3px solid #4040FF;
}

.image-resizer {
  display: inline-flex;
  position: relative;
  max-width: 100%;
}

.image-resizer__handle {
  display: block;
  width: 12px;
  height: 12px;
  background: #4040FF;
  border-radius: 50%;
  position: absolute;
  z-index: 3;
}

.image-resizer__handle--left {
  top: 50%;
  left: -6px;
  transform: translateY(-50%);
  cursor: ew-resize;
}

.image-resizer__handle--right {
  top: 50%;
  right: -6px;
  transform: translateY(-50%);
  cursor: ew-resize;
}

/* For Lexical Editor */
[data-lexical-editor] h1 {
  @apply text-4xl font-bold mb-4 mt-2;
}

[data-lexical-editor] h2 {
  @apply text-3xl font-bold mb-3 mt-2;
}

[data-lexical-editor] h3 {
  @apply text-2xl font-bold mb-2 mt-2;
}

/* Basic styling for the CKEditor wrapper */
.blog-editor {
  border: 1px solid #e2e8f0;
  border-radius: 0.375rem;
  overflow: hidden;
}

/* The CKEditor toolbar */
.toolbar-item {
  position: relative;
}

.toolbar-item::after {
  content: attr(data-tooltip);
  position: absolute;
  bottom: -30px;
  left: 50%;
  transform: translateX(-50%);
  background-color: #333;
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  white-space: nowrap;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.1s ease, visibility 0.1s ease; /* Fast 0.1s transition */
  z-index: 10;
}

.toolbar-item:hover::after {
  opacity: 1;
  visibility: visible;
  transition-delay: 0.2s; /* Show after 0.2s hover instead of ~2s */
}

/* Small arrow pointing up */
.toolbar-item::before {
  content: '';
  position: absolute;
  bottom: -10px;
  left: 50%;
  transform: translateX(-50%);
  border-width: 5px;
  border-style: solid;
  border-color: transparent transparent #333 transparent;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.1s ease, visibility 0.1s ease;
  z-index: 10;
}

.toolbar-item:hover::before {
  opacity: 1;
  visibility: visible;
  transition-delay: 0.2s;
}

/* Editor content area */
.ck-content {
  min-height: 300px;
  max-height: 600px;
  overflow-y: auto;
}

/* ContentEditable Editor Styles */
[contenteditable="true"]:empty:before {
  content: attr(placeholder);
  color: #9ca3af;
  font-style: italic;
  cursor: text;
}

[contenteditable="true"] img {
  max-width: 100%;
  height: auto;
}

[contenteditable="true"] blockquote {
  border-left: 3px solid #4b5563;
  margin-left: 0;
  padding-left: 1rem;
  color: #9ca3af;
}

[contenteditable="true"] pre {
  background-color: #111827;
  padding: 1rem;
  border-radius: 0.25rem;
  overflow-x: auto;
  font-family: monospace;
}

[contenteditable="true"] h1 {
  font-size: 2.25rem;
  font-weight: 700;
  margin-bottom: 0.75rem;
  margin-top: 1rem;
  line-height: 1.2;
}

[contenteditable="true"] h2 {
  font-size: 1.875rem;
  font-weight: 700;
  margin-bottom: 0.5rem;
  margin-top: 0.75rem;
  line-height: 1.2;
}

[contenteditable="true"] h3 {
  font-size: 1.5rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  margin-top: 0.75rem;
  line-height: 1.25;
}

/* Force all pasted content to use the editor's text color, except links */

/* Updated Poll Styles to match your preferred design */
/* Dark theme Poll Styles */
.PollNode__container {
  border: 1px solid #777;
  border-radius: 12px;
  background-color: #121212;
  padding: 20px;
  margin: 16px 0;
  max-width: 800px;
  min-width: 40vw;
}

.PollNode__inner {
  width: 100%;
}

.PollNode__heading {
  font-size: 18px;
  font-weight: 500;
  margin-bottom: 20px;
  text-align: center;
  color: white;
}

.PollNode__optionContainer {
  display: flex;
  align-items: center;
  margin-bottom: 12px;
  width: 100%;
}

.PollNode__optionCheckboxWrapper {
  width: 24px;
  height: 24px;
  border: 1px solid #555;
  border-radius: 4px;
  margin-right: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #1a1a1a;
}

.PollNode__optionCheckboxChecked {
  border: 1px solid #3b82f6;
  background-color: #3b82f6;
}

.PollNode__optionCheckbox {
  opacity: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
}

.PollNode__optionInputWrapper {
  flex: 1;
  position: relative;
  border: 1px solid #555;
  border-radius: 4px;
  overflow: hidden;
  background-color: #1a1a1a;
}

.PollNode__optionInput {
  width: 100%;
  padding: 10px 12px;
  border: none;
  background: transparent;
  font-size: 16px;
  color: white;
  outline: none;
  caret-color: white; /* Makes the cursor visible within poll inputs */
}

.PollNode__optionInput {
  caret-color: white !important; 
}

.PollNode__optionDelete {
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  border: none;
  font-size: 24px;
  color: #777;
  cursor: pointer;
}

.PollNode__optionDelete:hover {
  color: #ef4444;
}

.PollNode__optionDeleteDisabled {
  color: #444;
  cursor: not-allowed;
}

.PollNode__optionDeleteDisabled:hover {
  color: #444;
}

.PollNode__footer {
  display: flex;
  justify-content: center;
  margin-top: 16px;
}

.Button__root {
  background-color: #333;
  color: white;
  border: none;
  border-radius: 4px;
  padding: 8px 16px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
}

.Button__root:hover {
  background-color: #444;
}

.Button__small {
  padding: 6px 12px;
  font-size: 14px;
}

/* Hide votes visualization for cleaner look */
.PollNode__optionInputVotes {
  display: none;
}

.PollNode__optionInputVotesCount {
  display: none;
}
.editor-input, 
[contenteditable="true"]:not(a),
.ContentEditable__root:not(a),
.editor-container .editor-inner .editor-input:not(a),
div[contenteditable="true"]:not(a),
div[role="textbox"]:not(a) {
  caret-color: white;
  color: white;
  position: relative;
  z-index: 1;
}

/* Force visibility of the cursor */
.editor-container::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none; /* Allows clicking through */
  z-index: -1; /* Behind the text but in front of any background issues */
}

/* Target all content editable areas */
[contenteditable="true"] {
  caret-color: white !important;
}

/* For extra specificity to override any inline styles */
.LexicalEditor .ContentEditable__root {
  caret-color: white !important;
}

/* Also add a more visible caret by making it thicker */
@keyframes blink-caret {
  from, to { caret-color: transparent }
  50% { caret-color: white }
}

.editor-input, 
.ContentEditable__root,
[contenteditable="true"] {
  caret-width: 2px !important; /* Make the cursor thicker where supported */
  caret-color: white; 
  animation: blink-caret 1s step-end infinite; /* Optional: make cursor blink for visibility */
}

/* Link styling in the editor */
.editor-container a,
.editor-inner a,
.editor-input a,
[contenteditable="true"] a,
.ContentEditable__root a,
a[data-lexical-editor],
.editor-link {
  color: #3b82f6 !important; /* Add !important for link color */
  text-decoration: underline !important;
  cursor: pointer !important;
}

/* Style when hovering over links */
.editor-container a:hover,
.editor-input a:hover,
[data-lexical-editor] a:hover,
a.editor-link:hover {
  color: #2563eb; /* Slightly darker blue on hover */
  text-decoration: underline; /* Keep the underline on hover */
}

/* Specific rules for links in rich text editors */
.ql-editor a {
  color: #3b82f6 !important;
  text-decoration: underline !important;
}

.ql-editor a:hover {
  color: #2563eb !important;
}

/* For Quill specifically */
.quill a,
.quill .ql-snow a {
  color: #3b82f6 !important;
  text-decoration: underline !important;
}

/* Override any other rules that might be affecting links */
[contenteditable="true"] a,
[contenteditable="true"] a span,
[contenteditable="true"] a * {
  color: #3b82f6 !important;
  text-decoration: underline !important;
}